name: Glue Job CI/CD

on:
  push:
    branches: [ main ] # Trigger on push to main branch
  pull_request:
    branches: [ main ] 

jobs:
  test:
    name: Run PySpark Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9' # Choose a version compatible with Glue/PySpark

      - name: Set up Java (required for Spark)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Or 'zulu', 'adopt'
          java-version: '11' # Common version for Spark 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          java -version # Verify Java setup
          python --version # Verify Python setup
          pip list # List installed packages

      - name: Run Pytest Integration Tests
        run: pytest tests/test_glue_etl.py -v # -v for verbose output
        env:
           PYSPARK_PYTHON: python # Ensure pytest uses the correct python
           PYSPARK_DRIVER_PYTHON: python

  deploy:
    name: Deploy Glue Script to AWS
    needs: test # Run only if tests pass
    # Run only on direct pushes to main, not on PRs
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    # Add environment variables for AWS config if needed, or use inputs
    # env:
    #   GLUE_SCRIPT_S3_BUCKET: your-glue-scripts-bucket
    #   GLUE_SCRIPT_S3_KEY: lakehouse_scripts/glue_job.py
    #   GLUE_JOB_NAME: Lakehouse # Your Glue Job Name
    permissions:
      id-token: write # Required for configure-aws-credentials using OIDC
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4 # Use latest version
        with:
          # role-to-assume: arn:aws:iam::ACCOUNT-ID-WITHOUT-HYPHENS:role/YOUR_GITHUB_ACTIONS_DEPLOY_ROLE # Use OIDC if possible
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # Fallback if not using OIDC
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Fallback if not using OIDC
          aws-region: ${{ secrets.AWS_REGION }} # e.g., eu-west-1

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
          aws --version

      - name: Upload Glue Script to S3
        run: |
          aws s3 cp src/glue_job.py s3://${{ secrets.GLUE_SCRIPT_S3_BUCKET }}/${{ secrets.GLUE_SCRIPT_S3_KEY }}
        env:
          # Get bucket/key from secrets or hardcode if static (not recommended)
          GLUE_SCRIPT_S3_BUCKET: ${{ secrets.GLUE_SCRIPT_S3_BUCKET }}
          GLUE_SCRIPT_S3_KEY: ${{ secrets.GLUE_SCRIPT_S3_KEY }} # e.g., lakehouse_scripts/glue_job.py

      - name: Update AWS Glue Job
        run: |
          aws glue update-job \
            --job-name "${{ secrets.GLUE_JOB_NAME }}" \
            --job-update "{\"ScriptLocation\": {\"S3Path\": \"s3://${GLUE_SCRIPT_S3_BUCKET}/${GLUE_SCRIPT_S3_KEY}\"}}"
        env:
           GLUE_JOB_NAME: ${{ secrets.GLUE_JOB_NAME }} # Your Glue Job Name from secrets
           GLUE_SCRIPT_S3_BUCKET: ${{ secrets.GLUE_SCRIPT_S3_BUCKET }}
           GLUE_SCRIPT_S3_KEY: ${{ secrets.GLUE_SCRIPT_S3_KEY }}

      - name: Deployment Summary
        run: |
          echo "Successfully deployed script s3://${{ secrets.GLUE_SCRIPT_S3_BUCKET }}/${{ secrets.GLUE_SCRIPT_S3_KEY }}"
          echo "Updated Glue Job: ${{ secrets.GLUE_JOB_NAME }}"